"""Concatenate CHGNet results from multiple data files generated by slurm job array
into single file.
"""


# %%
from __future__ import annotations

import os
from glob import glob

import pandas as pd
from pymatviz import density_scatter
from tqdm import tqdm

from matbench_discovery.data import df_wbm
from matbench_discovery.energy import (
    apply_mp_2020_corrections_to_ml_struct,
    get_e_form_per_atom,
)
from matbench_discovery.preds import df_preds, e_form_col
from matbench_discovery.slurm import join_slurm_job_array_results

__author__ = "Janosh Riebesell"
__date__ = "2023-03-01"


# %%
module_dir = os.path.dirname(__file__)
task_type = "IS2RE"
date = "2023-03-06"
glob_pattern = f"{date}-chgnet-wbm-{task_type}*/*.json.gz"
file_paths = sorted(glob(f"{module_dir}/{glob_pattern}"))
print(f"Found {len(file_paths):,} files for {glob_pattern = }")
e_form_chgnet_col = "e_form_per_atom_chgnet"
struct_col = "chgnet_structure"
entry_col = "computed_structure_entry"


# %%
def post_process(df: pd.DataFrame) -> pd.DataFrame:
    """Apply MP 2020 energy corrections and compute corrected formation energy."""
    df = apply_mp_2020_corrections_to_ml_struct(
        df, energy_col="chgnet_energy", struct_col=struct_col, entry_col=entry_col
    )
    df["formula"] = df_wbm.formula
    df[e_form_chgnet_col] = [
        # cse.energy includes MP 2020 corrections
        get_e_form_per_atom(dict(energy=cse.energy, composition=formula))
        for formula, cse in tqdm(
            df.set_index("formula")[entry_col].items(), total=len(df)
        )
    ]
    return df


df_chgnet, out_path = join_slurm_job_array_results(
    glob_pattern=glob_pattern, drop_cols="chgnet_trajectory", post_process=post_process
)


# %%
ax = density_scatter(df=df_preds, x=e_form_col, y=e_form_chgnet_col)


# %%
# in_path = f"{module_dir}/2023-03-04-chgnet-wbm-IS2RE"
# df_chgnet = pd.read_csv(f"{in_path}.csv.gz").set_index("material_id")
# df_chgnet = pd.read_json(f"{in_path}.json.gz").set_index("material_id")
