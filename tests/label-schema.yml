definitions:
  http_url:
    $ref: ./model-schema.yml#/definitions/http_url
  license_enum:
    $ref: ./model-schema.yml#/definitions/license_enum
  ModelType:
    $ref: ./model-schema.yml#/definitions/ModelType
  TargetType:
    $ref: ./model-schema.yml#/definitions/TargetType

  Label:
    type: object
    properties:
      key: { type: string, description: 'Unique identifier for the metric' }
      short: { type: string, description: 'Short label for the metric' }
      label: { type: string, description: 'Full label for the metric' }
      group: { type: string, description: 'Group header label' }
      description: { type: string, description: 'Description of the metric' }
      path:
        type: string
        description: 'Path to the metric in the model metadata'
      unit: { type: string, description: 'Unit of the metric' }
      range:
        type: array
        items: { type: 'number' }
        minItems: 2
        maxItems: 2
        description: 'Range of possible values for the metric'
      visible: { type: 'boolean', description: 'Whether the metric is visible' }
      format: { type: string, description: 'd3-format string' }
      sticky: { type: 'boolean', description: 'Whether the metric is sticky' }
      sortable:
        { type: 'boolean', description: 'Whether the metric is sortable' }
      better:
        type: ['string', 'null']
        enum: ['higher', 'lower', null]
        description: 'Sort direction: higher is better, lower is better, or null for no sorting'
      cell_style: { type: string, description: 'CSS string for cell style' }
      style: { type: string, description: 'CSS string for cell style' }
      symprec: { type: string, description: 'Symprec value for the metric' }
      scale_type:
        type: string
        enum: ['log', 'linear']
        description: 'Scale type for the metric'
    required: [key, label, description]
    additionalProperties: false

  DiscoveryMetricsLabels:
    type: object
    properties:
      Accuracy: { $ref: '#/definitions/Label' }
      F1: { $ref: '#/definitions/Label' }
      DAF: { $ref: '#/definitions/Label' }
      Precision: { $ref: '#/definitions/Label' }
      Recall: { $ref: '#/definitions/Label' }
      TNR: { $ref: '#/definitions/Label' }
      TPR: { $ref: '#/definitions/Label' }
      MAE: { $ref: '#/definitions/Label' }
      R2: { $ref: '#/definitions/Label' }
      RMSE: { $ref: '#/definitions/Label' }
    required: [Accuracy, F1, DAF, Precision, Recall, TNR, TPR, MAE, R2, RMSE]
    additionalProperties: false

  MetadataLabels:
    type: object
    properties:
      model_name: { $ref: '#/definitions/Label' }
      training_set: { $ref: '#/definitions/Label' }
      targets: { $ref: '#/definitions/Label' }
      date_added: { $ref: '#/definitions/Label' }
      links: { $ref: '#/definitions/Label' }
      r_cut: { $ref: '#/definitions/Label' }
      n_training_materials: { $ref: '#/definitions/Label' }
      n_training_structures: { $ref: '#/definitions/Label' }
      checkpoint_license: { $ref: '#/definitions/Label' }
      code_license: { $ref: '#/definitions/Label' }
      missing_preds: { $ref: '#/definitions/Label' }
      missing_percent: { $ref: '#/definitions/Label' }
      'Run Time (h)': { $ref: '#/definitions/Label' }
      org: { $ref: '#/definitions/Label' }
    required:
      - model_name
      - training_set
      - targets
      - date_added
      - links
      - r_cut
      - n_training_materials
      - n_training_structures
      - checkpoint_license
      - code_license
      - missing_preds
      - missing_percent
      - 'Run Time (h)'
      - org
    additionalProperties: false

  HyperparamLabels:
    type: object
    properties:
      model_params: { $ref: '#/definitions/Label' }
      graph_construction_radius: { $ref: '#/definitions/Label' }
      max_force: { $ref: '#/definitions/Label' }
      max_steps: { $ref: '#/definitions/Label' }
      batch_size: { $ref: '#/definitions/Label' }
      epochs: { $ref: '#/definitions/Label' }
      n_layers: { $ref: '#/definitions/Label' }
      learning_rate: { $ref: '#/definitions/Label' }
      max_neighbors: { $ref: '#/definitions/Label' }
      n_estimators: { $ref: '#/definitions/Label' }
    required:
      - model_params
      - graph_construction_radius
      - max_force
      - max_steps
      - batch_size
      - epochs
      - n_layers
      - learning_rate
      - max_neighbors
      - n_estimators
    additionalProperties: false

  GeoOptSymmetryMetricsLabels:
    type: object
    properties:
      symmetry_match_1e-2: { $ref: '#/definitions/Label' }
      symmetry_decrease_1e-2: { $ref: '#/definitions/Label' }
      symmetry_increase_1e-2: { $ref: '#/definitions/Label' }
      symmetry_match_1e-5: { $ref: '#/definitions/Label' }
      symmetry_decrease_1e-5: { $ref: '#/definitions/Label' }
      symmetry_increase_1e-5: { $ref: '#/definitions/Label' }
    required:
      - symmetry_match_1e-2
      - symmetry_decrease_1e-2
      - symmetry_increase_1e-2
      - symmetry_match_1e-5
      - symmetry_decrease_1e-5
      - symmetry_increase_1e-5
    additionalProperties: false

  DatasetMetadataLabels:
    type: object
    properties:
      name: { $ref: '#/definitions/Label' }
      structures: { $ref: '#/definitions/Label' }
      materials: { $ref: '#/definitions/Label' }
      created: { $ref: '#/definitions/Label' }
      open: { $ref: '#/definitions/Label' }
      static: { $ref: '#/definitions/Label' }
      license: { $ref: '#/definitions/Label' }
      method: { $ref: '#/definitions/Label' }
      api: { $ref: '#/definitions/Label' }
      links: { $ref: '#/definitions/Label' }
    required:
      - name
      - structures
      - materials
      - created
      - open
      - static
      - license
      - method
      - api
      - links
    additionalProperties: false
